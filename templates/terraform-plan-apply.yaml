parameters:
- name: env
  type: string

- name: terraformVersion
  type: string
  default: 1.1.0

- name: location
  type: string
  default: 'UK South'
  values:
    - UK South
    - UK West

- name: project
  type: string
  default: application

- name: environmentServiceConnection
  type: string

- name: product
  type: string
  values:
    - wowza

- name: activityName
  type: string
  values:
    - Video_Hearing_Wowza

- name: tfStateResourceGroup
  type: string

- name: tfStateStorageAccountName 
  type: string

- name: dependsOnEnv
  default: ''

- name: workingDirectory
  type: string

- name: destroyInfra
  type: boolean
  default: false

stages:
- stage: 'Terraform_Plan_${{ parameters.env }}'
  displayName: 'Terraform Plan ${{ parameters.env }}'
  ${{ if eq(parameters.dependsOnEnv, '') }}:
    dependsOn: Validate_Terraform_Code
  ${{ elseif eq(parameters.dependsOnEnv, '[]') }}:
    dependsOn: []
  ${{ else }}:
    dependsOn: 'Terraform_Apply_${{ parameters.dependsOnEnv }}'
  variables:
    - template: ../vars/pipeline/common.yaml
    - template: ../vars/pipeline/${{ lower(parameters.env) }}.yaml
  jobs: 
    - job: 'Terraform_Plan_${{ parameters.env }}'
      displayName: 'Terraform Plan ${{ parameters.env }}'
      variables:
      - name: environment
        value: ${{ parameters.env }}
      - group: vh-tenant-creds
      - template: azure-devops-vars.yaml
        parameters:
          environment: ${{ parameters.env }}
        # If another project comes along and wants to use the same pipeline file then make this a variable in the UI
        # but it might be better to template the pipeline more and have a different pipeline file
        # so that someone doesn't pick the wrong var in the dropdown
        # same comment as above ^^
      steps:
      - template: templates\Azure\Common\unlock-resource-group.yml@templates
        parameters:
          subscriptionName: ${{parameters.environmentServiceConnection}}
          resourceGroupName: "vh-infra-wowza-${{variables.environment}}"
          lockName: "${{variables.environment}}-lock"
              
      - template: templates\Azure\Storage\firewall-update.yaml@templates
        parameters:
          subscriptionName: ${{parameters.environmentServiceConnection}}
          resourceGroupName: "vh-infra-wowza-${{variables.environment}}"
          storageAccountName: "vhinfrawowza${{ lower(variables.environment) }}"
          action: Allow

      - template: terraform-plan.yaml
        parameters:
          environment: ${{ variables.environment }}
          location: ${{ parameters.location }}
          project: ${{ parameters.project }}
          product: ${{ parameters.product }}
          builtFrom: $(Build.Repository.Name)
          tfversion: ${{ parameters.terraformVersion }}
          serviceConnection: ${{ parameters.environmentServiceConnection }}
          tfStateResourceGroup: ${{ lower(parameters.tfStateResourceGroup) }}
          tfStateStorageAccountName: ${{ lower(parameters.tfStateStorageAccountName) }}
          workingDirectory: ${{ parameters.workingDirectory }}
          activity_name: ${{ parameters.activityName  }}
          destroyInfra: ${{ parameters.destroyInfra }}

################################################
# Terraform Apply Dev. #########################

- stage: 'Terraform_Apply_${{ parameters.env }}'
  displayName: 'Terraform Apply ${{ parameters.env }}'
  dependsOn: 'Terraform_Plan_${{ parameters.env }}'
  variables:
    - name: environment
      value: ${{ parameters.env }}
    - group: vh-tenant-creds
    - template: azure-devops-vars.yaml
      parameters:
        environment: ${{ parameters.env }}
      # If another project comes along and wants to use the same pipeline file then make this a variable in the UI
      # but it might be better to template the pipeline more and have a different pipeline file
      # so that someone doesn't pick the wrong var in the dropdown
    # same comment as above ^^
    
    - template: ../vars/pipeline/common.yaml
    - template: ../vars/pipeline/${{ lower(parameters.env) }}.yaml
  jobs:
    - deployment: 'Terraform_Apply_${{ parameters.env }}'
      displayName: Terraform Apply ${{ parameters.env }}
      continueOnError: false
      environment: ${{ parameters.env }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: templates\Azure\Storage\firewall-update.yaml@templates
              parameters:
                subscriptionName: ${{parameters.environmentServiceConnection}}
                resourceGroupName: "vh-infra-wowza-${{variables.environment}}"
                storageAccountName: "vhinfrawowza${{ lower(variables.environment) }}"
                action: Allow
                
            - template: terraform-apply.yaml
              parameters:
                environment: ${{ parameters.env }}
                location: ${{ parameters.location }}
                project: ${{ parameters.project }}
                product: ${{ parameters.product }}
                builtFrom: $(Build.Repository.Name)
                tfversion: ${{ parameters.terraformVersion }}
                serviceConnection: ${{ parameters.environmentServiceConnection }}
                tfStateResourceGroup: ${{ lower(parameters.tfStateResourceGroup) }}
                tfStateStorageAccountName: ${{ lower(parameters.tfStateStorageAccountName) }}
                activity_name: ${{ parameters.activityName  }}
                ${{ if eq(parameters.activityName, 'Video_Hearing_Core') }}:
                  additional_tf_var: $(ado_vars_to_tf.ado_vars)
                  
    - ${{ if eq(parameters.destroyInfra, false )}}:
      - job: ApplyExtToEnv
        displayName: 'Extensions to ${{parameters.env}}'
        dependsOn: Terraform_Apply_${{ parameters.env }}
        variables:
          - name: currentBranch
            ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
              value: $(System.PullRequest.SourceBranch)
            ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
              value: $(Build.SourceBranch)
        steps:
          - template: az-ext-splunk.yaml
            parameters:
              subscription: ${{parameters.environmentServiceConnection}}
              ${{ if eq(parameters.env, 'dev') }}:
                vmNames: "vh-infra-wowza-${{parameters.env}}-1"
              ${{ else }}:
                vmNames: "vh-infra-wowza-${{parameters.env}}-1,vh-infra-wowza-${{parameters.env}}-2"
              vmRgName:  "vh-infra-wowza-${{parameters.env}}"
              env: ${{ parameters.env }}
              kvName: "vh-infra-core-${{ parameters.env }}"
              currentBranch: ${{variables.currentBranch}}
          - template: az-ext-oms.yaml
            parameters:
              subscription: ${{parameters.environmentServiceConnection}}
              ${{ if eq(parameters.env, 'dev') }}:
                vmNames: ["vh-infra-wowza-${{parameters.env}}-1"]
              ${{ else }}:
                vmNames: ["vh-infra-wowza-${{parameters.env}}-1","vh-infra-wowza-${{parameters.env}}-2"]
              vmRgName:  "vh-infra-wowza-${{parameters.env}}"
              env: ${{ parameters.env }}
              env_long: ${{ variables.env_long }}
          - ${{ if or(eq(parameters.env, 'stg'), eq(parameters.env, 'test'), eq(parameters.env, 'prod')) }}:
            - template: az-ext-dynatrace-api.yaml
              parameters:
                subscription: ${{parameters.environmentServiceConnection}}
                ${{ if eq(parameters.env, 'dev') }}:
                  vmNames: ["vh-infra-wowza-${{parameters.env}}-1"]
                ${{ else }}:
                  vmNames: ["vh-infra-wowza-${{parameters.env}}-1","vh-infra-wowza-${{parameters.env}}-2"]
                vmRgName: "vh-infra-wowza-${{parameters.env}}"
                env: ${{parameters.env}}
                env_long: ${{ variables.env_long }}
                dynatraceToken: $(dynatrace-token)

      - job: MonitoringTasks
        displayName: 'Monitoring Tasks ${{parameters.env}}'
        dependsOn: Terraform_Apply_${{ parameters.env }}
        steps:
          - ${{ if or(eq(parameters.env, 'stg'), eq(parameters.env, 'prod')) }}:
            - template: az-dynatrace-credentials.yaml
              parameters:
                subscription: ${{parameters.environmentServiceConnection}}
                env: ${{ parameters.env }}
                dynatraceTenantId: ${{ variables.dynatrace_tenant_id }}
                infraCoreKvName: ${{ variables.central_infra_kv }}
                dynatraceApiTokenSecretName: ${{ variables.dynatrace_api_token_secret_name }}
                kvName: "vh-infra-core-${{ parameters.env }}"
                wowzaUsernameSecretName: "wowzaconfiguration--username"
                wowzaPasswordSecretName: "wowzaconfiguration--restPassword"
